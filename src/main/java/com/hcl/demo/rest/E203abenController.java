package com.hcl.demo.rest;

import javax.ws.rs.core.MediaType;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.hcl.demo.dataobject.E203abenWrapper;
import com.hcl.demo.exception.DemoBusinessException;
import com.hcl.demo.exception.DemoRestException;
import com.hcl.demo.service.IE203abenService;
import com.hcl.demo.util.DemoConstants;
import com.hcl.demo.util.DemoLogger;


/*************************************************************************
 *
 * HCL CONFIDENTIAL
 * _________________________________________________________________________________
 *
 * HCL is a trademark of HCL Company.
 *
 * Copyright © 2020 HCL. All rights reserved.
 *
 * NOTICE: All information contained herein is, and remains the property of HCL
 * and its suppliers, if any. The intellectual and technical concepts contained
 * herein are proprietary to HCL and its suppliers and may be covered by U.S.
 * and Foreign Patents, patents in process, and are protected by trade secret or
 * copyright law. Dissemination of this information or reproduction of this
 * material is strictly forbidden unless prior written permission is obtained
 * from HCL.
 *
 *
 * Author : Generated by ATMA ®
 * Revision History :
 *----------------------------------------------------------------------------------------------------------------------------------------------------
 *  ROW #	 DOCUMENT & Version,    			 REVISION DATE	 AUTHOR 				REVISION DESCRIPTION 		 REVISION TRACKING NOTES
 *    	     Release or Build Number
 *------------------------------------------------------------------------------------------------------------------------------------------------------
 *    1		 0.1												                   ATMA    		    Initial Conversion		   Converted from Legacy into Java
 *
 ******************************************************************************************************************************************************/

@RestController
@RequestMapping(value = "/e203abencontroller")
public class E203abenController {

    private static final DemoLogger LOGGER = DemoLogger.create(E203abenController.class);

    @Autowired
    private IE203abenService e203abenService;

    public void setIE203abenService(IE203abenService e203abenService) {
        this.e203abenService = e203abenService;
    }

    /*
     * Method execute
     * @param e203abenWrapper
     * @return e203abenWrapper
     * @throws DemoRestException
    */
    
    //Vikash changes 
    /*@RequestMapping(value = "/execute" , method = RequestMethod.POST,produces = MediaType.APPLICATION_JSON_VALUE, consumes=MediaType.APPLICATION_JSON_VALUE)
    public @ResponseBody E203abenWrapper execute(@RequestBody E203abenWrapper e203abenWrapper) throws DemoRestException {
        LOGGER.debug(DemoConstants.REQUEST, e203abenWrapper);
        try {
            e203abenWrapper = e203abenService.execute(e203abenWrapper);
        } catch (DemoBusinessException dataEx) {
            LOGGER.error(DemoConstants.ERROR , dataEx);
            throw new DemoRestException(dataEx);
        } catch (Exception ex) {
            LOGGER.error(DemoConstants.ERROR , ex);
            throw new DemoRestException(ex);
        }
        LOGGER.debug(DemoConstants.RESPONSE, e203abenWrapper);
        return e203abenWrapper;
    }*/
    
    
    @RequestMapping(value = "/execute" , method = RequestMethod.POST,produces = MediaType.APPLICATION_JSON, consumes=MediaType.APPLICATION_JSON)
    
    @ResponseBody
    public  E203abenWrapper execute( E203abenWrapper e203abenWrapper) throws DemoRestException {
        LOGGER.debug(DemoConstants.REQUEST, e203abenWrapper);
        try {
        	System.out.println("###1111111==="+e203abenService);
            e203abenWrapper = e203abenService.execute(e203abenWrapper);
            System.out.println("###22222");
        } catch (DemoBusinessException dataEx) {
            LOGGER.error(DemoConstants.ERROR , dataEx);
            throw new DemoRestException(dataEx);
        } catch (Exception ex) {
            LOGGER.error(DemoConstants.ERROR , ex);
            throw new DemoRestException(ex);
        }
        LOGGER.debug(DemoConstants.RESPONSE, e203abenWrapper);
        return e203abenWrapper;
    }
}
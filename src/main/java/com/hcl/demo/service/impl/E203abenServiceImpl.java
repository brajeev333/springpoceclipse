package com.hcl.demo.service.impl;


import java.util.Date;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.List;
import java.util.ArrayList;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.apache.commons.lang3.StringUtils;

//import com.hcl.demo.repositories.IE203abenRepository;
//import com.hcl.demo.repositories.impl.E203abenRepositoryImpl;
import com.hcl.demo.service.IE203abenService;
import com.hcl.demo.exception.DemoBusinessException;
import com.hcl.demo.exception.DemoDataAccessException;
import com.hcl.demo.dataobject.*;
import com.hcl.demo.util.DemoLogger;
import com.hcl.demo.util.DemoConstants;
import com.hcl.demo.io.SequentialFileReader;
import com.hcl.demo.io.SequentialFileWriter;

/*************************************************************************
 *
 * HCL CONFIDENTIAL
 * _________________________________________________________________________________
 *
 * HCL is a trademark of HCL Company.
 *
 *Copyright © 2020 HCL. All rights reserved.
 *
 * NOTICE: All information contained herein is, and remains the property of HCL
 * and its suppliers, if any. The intellectual and technical concepts contained
 * herein are proprietary to HCL and its suppliers and may be covered by U.S.
 * and Foreign Patents, patents in process, and are protected by trade secret or
 * copyright law. Dissemination of this information or reproduction of this
 * material is strictly forbidden unless prior written permission is obtained
 * from HCL.
 *
 *************************************************************************/
// Author : Generated by ATMA ®
// Revision History :
@Service
public   class E203abenServiceImpl   implements  IE203abenService {

    private static final DemoLogger LOGGER = DemoLogger.create(E203abenServiceImpl.class);

  /* @Autowired
    private IE203abenRepository e203abenRepository;

    public void setIE203abenRepository(IE203abenRepository e203abenRepository) {
        this.e203abenRepository = e203abenRepository;
    }

    @Autowired
    private IWcallService iWcallService;

    public void setWcallService(IWcallService iWcallService) {
        this.iWcallService = iWcallService;
    }*/
    /*******************************************************************/
    /*  SYSTEM      GEMENSAMMA*/
    /*  PROGRAM     E203ABEN*/
    /*              ERSATTER ASSEMBLER-VERSIONEN. TILLSAMMAS MED*/
    /*              YTTERLIGARE EN SUBMODUL, SPMZABEN,*/
    /*              SOM GOR ROLLBACK, SATTER RETURKOD*/
    /*              OCH DIVIDERAR MED 0 FOR ATT FORORSAKA EN*/
    /*              ABEND*/
    /*              SPMZABEN ANROPAS MED DYNAMISK CALL*/
    /*  KODAD       2012-11-29*/
    /*  KODAD AV    LILLIAN OLOFSSON*/
    /*******************************************************************/
    /*  ANDRINGSJOURNAL*/
    /*  DATUM  SIGN  ATGARD*/
    /*******************************************************************/
    /*******************************************************************/
    /*    ARBETSAREOR*/
    /*******************************************************************/
    /*******************************************************************/
    /*    COPYS*/
    /*******************************************************************/
    /*>Y2K<********* BE203ABE START ********************************/
    /*                                                             */
    /*    NAMN: BE203ABE    VER:                  SKAPAD: 890302   */
    /*    ANM : FOR PROGRAMAVBROTT I BATCH        AV    : PKHB     */
    /*          DB2-PROGRAM.                      ANDRAD:          */
    /*                                                             */
    /***************************************************************/
    /*                                                             */
    /* RETURKOD                                                    */
    /* DUMPKOD                                                     */
    /*                                                             */
    /*************** BE203ABE SLUT *********************************/
    /*THE FOLLOWING IS NOTED AS MISSING BY SHYAM*/
    /*COPY BSPMZABE.*/
    /*******************************************************************/
    /* HUVUD OCH ENDA SEKTION*/
    /*******************************************************************/
    /**
     * Method execute
     * @param e203abenWrapper
     * @return e203abenWrapper
     * @throws DemoBusinessException
     */
    public  E203abenWrapper execute(E203abenWrapper e203abenWrapper) throws DemoBusinessException {
        LOGGER.debug(DemoConstants.REQUEST, e203abenWrapper);
        try {
        	System.out.println("###33333");
			
			  E203abenBO e203aben = (E203abenBO)e203abenWrapper.getFirst(e203abenWrapper.getE203abenBO(), E203abenBO.class);
			  //LOGGER.info("in-condcode = " + e203aben.getLinkCondcode());
			  //LOGGER.info("in-dumpcode = " + e203aben.getLinkDumpcode());
			 
            
        	//e203abenWrapper.setExeStatus(1);
        	//e203abenWrapper.setSqlStatusCode(20);
            
            //System.out.println("###4444444");
            
            //vikash changes  added setter and getter  
           /* e203aben.setSpmzabenArea(" ");
            //E203aben e203aben = e203aben;
            e203aben.setSpmzabenReturkod(e203aben.getLinkCondcode());
            e203aben.setSpmzabenDumpcode(e203aben.getLinkDumpcode());
            e203aben.setSpmzabenHuvudpgm("E203ABEN");
            e203aben.setSpmzabenFeltext("EGENKODAD ABEND");*/
           // WcallWrapper wCall  = iWcallService.execute(spmzabenArea);
            return e203abenWrapper;
        } catch (Exception ex) {
            LOGGER.error(DemoConstants.ERROR, ex);
            throw new DemoBusinessException(ex);
        }
        //LOGGER.debug(DemoConstants.RESPONSE, e203abenWrapper);
        //return e203abenWrapper;
    }

}
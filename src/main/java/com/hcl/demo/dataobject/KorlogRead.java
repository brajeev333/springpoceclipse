package com.hcl.demo.dataobject;

import java.io.Serializable;
import java.math.BigDecimal;

import org.apache.commons.lang3.StringUtils;

import com.hcl.demo.util.DemoUtils;

/*************************************************************************
 * 
 * HCL CONFIDENTIAL
 * _________________________________________________________________________________
 * 
 * HCL is a trademark of HCL Company.
 *
 * Copyright © 2020 HCL. All rights reserved.
 * 
 * NOTICE: All information contained herein is, and remains the property of HCL
 * and its suppliers, if any. The intellectual and technical concepts contained
 * herein are proprietary to HCL and its suppliers and may be covered by U.S.
 * and Foreign Patents, patents in process, and are protected by trade secret or
 * copyright law. Dissemination of this information or reproduction of this
 * material is strictly forbidden unless prior written permission is obtained
 * from HCL.
 *
 *************************************************************************/
// Author : Generated by ATMA ®
// Revision History : 

public class KorlogRead extends BaseBO<KorlogRead> implements Serializable {
	private static final long serialVersionUID = 1L;

	public KorlogRead() {
		super();
	}

	public KorlogRead(String data) {
		super();
		setData(data);
	}

	private String antalRead = "ANTAL LASTA RADER                 ";

	private BigDecimal klSiffror1 = new BigDecimal("0");

	private String fillerKorlogRead1 = " ";

	public String getAntalRead() {
		return antalRead;

	}

	public void setAntalRead(String antalRead) {
		this.antalRead = antalRead;
	}

	public BigDecimal getKlSiffror1() {
		return klSiffror1;

	}

	public void setKlSiffror1(BigDecimal klSiffror1) {
		this.klSiffror1 = klSiffror1;
	}

	public String getFillerKorlogRead1() {
		return fillerKorlogRead1;

	}

	public void setFillerKorlogRead1(String fillerKorlogRead1) {
	}

	public void setData(String baseData) {
		baseData = StringUtils.rightPad(baseData, 70);
		this.setAntalRead(baseData.substring(0, 35));
		this.setKlSiffror1((BigDecimal) DemoUtils.readFieldAsNumber(baseData.substring(35, 42), "#######", BigDecimal.class));
		this.setFillerKorlogRead1(baseData.substring(42, 70));

	}

	@Override
	public String toString() {
		return StringUtils.rightPad(getAntalRead().toString(), 35) + StringUtils.rightPad(getKlSiffror1().toString(), 7) + StringUtils.rightPad(getFillerKorlogRead1().toString(), 28);
	}

}
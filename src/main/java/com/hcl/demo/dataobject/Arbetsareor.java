package com.hcl.demo.dataobject;

import java.io.Serializable;
import java.math.BigInteger;

import org.apache.commons.lang3.StringUtils;

import com.hcl.demo.util.DemoUtils;

/**
 * **********************************************************************
 *
 *  HCL CONFIDENTIAL
 *  _________________________________________________________________________________
 *
 *  HCL is a trademark of HCL Company.
 *
 *  Copyright © 2020 HCL. All rights reserved.
 *
 *  NOTICE: All information contained herein is, and remains the property of HCL
 *  and its suppliers, if any. The intellectual and technical concepts contained
 *  herein are proprietary to HCL and its suppliers and may be covered by U.S.
 *  and Foreign Patents, patents in process, and are protected by trade secret or
 *  copyright law. Dissemination of this information or reproduction of this
 *  material is strictly forbidden unless prior written permission is obtained
 *  from HCL.
 *
 * ***********************************************************************
 */
// Author : Generated by ATMA ®
// Revision History :
public class Arbetsareor extends BaseBO<Arbetsareor> implements Serializable {

	private static final long serialVersionUID = 1L;

	public Arbetsareor() {
		super();
	}

	public Arbetsareor(String data) {
		super();
		setData(data);
	}

	private Integer arbAntalRader = 0;

	private Integer arbAntalSkrivna = 0;

	private BigInteger abendPnr;

	private String abendKundid;

	private Integer abendGruppid;

	private Integer abendBerDat;

	private Integer arbTime;

	private FillerArbetsareor1 fillerArbetsareor1 = new FillerArbetsareor1();

	private ArbTid arbTid = new ArbTid();

	public Integer getArbAntalRader() {
		return arbAntalRader;
	}

	public void setArbAntalRader(Integer arbAntalRader) {
		this.arbAntalRader = arbAntalRader;
	}

	public Integer getArbAntalSkrivna() {
		return arbAntalSkrivna;
	}

	public void setArbAntalSkrivna(Integer arbAntalSkrivna) {
		this.arbAntalSkrivna = arbAntalSkrivna;
	}

	public BigInteger getAbendPnr() {
		return abendPnr;
	}

	public void setAbendPnr(BigInteger abendPnr) {
		this.abendPnr = abendPnr;
	}

	public String getAbendKundid() {
		return abendKundid;
	}

	public void setAbendKundid(String abendKundid) {
		this.abendKundid = abendKundid;
	}

	public Integer getAbendGruppid() {
		return abendGruppid;
	}

	public void setAbendGruppid(Integer abendGruppid) {
		this.abendGruppid = abendGruppid;
	}

	public Integer getAbendBerDat() {
		return abendBerDat;
	}

	public void setAbendBerDat(Integer abendBerDat) {
		this.abendBerDat = abendBerDat;
	}

	public Integer getArbTime() {
		return arbTime;
	}

	public void setArbTime(Integer arbTime) {
		this.arbTime = arbTime;
	}

	public FillerArbetsareor1 getFillerArbetsareor1() {
		return fillerArbetsareor1;
	}

	public void setFillerArbetsareor1(FillerArbetsareor1 fillerArbetsareor1) {
		this.setData(fillerArbetsareor1.toString());
	}

	public ArbTid getArbTid() {
		return arbTid;
	}

	public void setArbTid(ArbTid arbTid) {
		this.arbTid = arbTid;
	}

	public void setData(String baseData) {
		baseData = StringUtils.rightPad(baseData, 54);
		this.setArbAntalRader((Integer) DemoUtils.readFieldAsNumber(baseData.substring(0, 7), "#######", Integer.class));
		this.setArbAntalSkrivna((Integer) DemoUtils.readFieldAsNumber(baseData.substring(7, 14), "#######", Integer.class));
		this.setAbendPnr((BigInteger) DemoUtils.readFieldAsNumber(baseData.substring(14, 24), "##########", BigInteger.class));
		this.setAbendKundid(baseData.substring(24, 30));
		this.setAbendGruppid((Integer) DemoUtils.readFieldAsNumber(baseData.substring(30, 33), "###", Integer.class));
		this.setAbendBerDat((Integer) DemoUtils.readFieldAsNumber(baseData.substring(33, 41), "########", Integer.class));
		this.setArbTime((Integer) DemoUtils.readFieldAsNumber(baseData.substring(41, 49), "########", Integer.class));
		this.setArbTid(new ArbTid(baseData.substring(49, 103)));
	}

	@Override
	public String toString() {
		return getArbTime().toString() + getArbTid().toString();
	}

	public class FillerArbetsareor1 extends BaseBO<FillerArbetsareor1> {

		public Integer getArbTimeHh() {
			String baseData = getArbTime().toString();
			return DemoUtils.parseToInt(baseData.substring(0, 2));
		}

		public void setArbTimeHh(Integer arbTimeHh) {
			String baseData = getArbTime().toString();
			baseData = StringUtils.leftPad(baseData, 8);
			baseData = StringUtils.overlay(baseData, StringUtils.leftPad(arbTimeHh.toString(), 2), 0, 2);
			setArbTime(DemoUtils.parseToInt(baseData));
		}

		public Integer getArbTimeMm() {
			String baseData = getArbTime().toString();
			return DemoUtils.parseToInt(baseData.substring(2, 4));
		}

		public void setArbTimeMm(Integer arbTimeMm) {
			String baseData = getArbTime().toString();
			baseData = StringUtils.leftPad(baseData, 8);
			baseData = StringUtils.overlay(baseData, StringUtils.leftPad(arbTimeMm.toString(), 2), 2, 4);
			setArbTime(DemoUtils.parseToInt(baseData));
		}

		public Integer getFillerFillerArbetsareor11() {
			String baseData = StringUtils.rightPad(getArbTime().toString(), 8, ' ');
			return DemoUtils.parseToInt(baseData.substring(4, 8));
		}

		public void setFillerFillerArbetsareor11(Integer fillerFillerArbetsareor11) {
			String baseData = getArbTime().toString();
			baseData = StringUtils.leftPad(baseData, 8);
			baseData = StringUtils.overlay(baseData, StringUtils.leftPad(fillerFillerArbetsareor11.toString(), 4), 4, 8);
			setArbTime(DemoUtils.parseToInt(baseData));
		}

		public void setData(String baseData) {
			baseData = StringUtils.rightPad(baseData, 8);
		}

		@Override
		public String toString() {
			return getArbTime().toString();
		}
	}
}
